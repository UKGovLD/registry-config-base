#set($root=$registry.rootPath)

#set($response=$registry.perform("Read","$uri?_view=version_list", $requestor))
#set($target="$registry.baseURI/$uri")

#if($response.status == 404)
  #parse("main/_not-found.vm")

#elseif($response.status >= 500)
  #parse("main/_internal-error.vm")

#else
  #set($model=$response.entity)
  #set($versions=$model.querySelectW("SELECT ?version ?vi ?from ?to WHERE {?version dct:isVersionOf <$target> ; owl:versionInfo ?vi.
                       OPTIONAL {?version version:interval [time:hasBeginning [time:inXSDDateTime ?from]].}
                       OPTIONAL {?version version:interval [time:hasEnd [time:inXSDDateTime ?to]].}} ORDER BY DESC(?vi)"))

  <h3 class="text-center">Historical versions available</h3>


  <table class="table table-striped table-condensed">
    <thead>
      <tr>
        <th>Version</th>
        <th>Valid from</th>
        <th>Valid to</th>
      </tr>
    </thead>
    <tbody>
      #foreach($version in $versions)
        <tr>
          <td>#linkfor($version.version)</td>
          <td>#if($version.from)$lib.printDatetime($version.from)#else - #end</td>
          <td>#if($version.to)$lib.printDatetime($version.to)#else - #end</td>
        </tr>
      #end
    </tbody>
  </table>
#end


