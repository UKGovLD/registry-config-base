## Global macros

##
## Support for actions UI elements
##

#macro( startActionSection $section )
    #set( $actionSectionState = { "section" : "$section", "started" : false } )
#end

#macro( action $action )
    #if( $actionSectionState.section && ! $actionSectionState.started )
        #set( $ignore = $actionSectionState.put("started", true) )
        <div class="row action-section">
            <div class=" col-md-offset-1 col-md-2">
                <strong>$actionSectionState.section</strong>:
            </div>
            <div class="col-md-9">
    #end
    #parse( "actions/_${action}.vm" )
#end

#macro( endActionSection )
    #if( $actionSectionState.section && $actionSectionState.started )
            </div>
        </div>
    #end
#end

#macro( incdialog $name )
   #if( ! $dialogs ) #set( $dialogs = {} ) #end
   #set( $ignore = $dialogs.put( $name, true) )
#end

#macro( renderDialogs )
   #foreach( $dialog in $dialogs.keySet() )
       #parse( "actions/_${dialog}-dialog.vm" )
   #end
#end

##
## General render macros
##

## Show status value as a suitably coloured blob
#macro(showstatus $status)
  <span class="label label-$lib.reg.asStatus($status).presentation">$lib.reg.asStatus($status)</span>
#end

## Determine the href value to use in a link to the given resource, reference URIs go external
#macro(linkhref $res)#if($res.uRI.startsWith($registry.baseURI))$root$res.uRI.substring($registry.baseURI.length())#else$res.uRI#end#end

## Determine the href value to use in a link to the given resource, reference URIs go internal
#macro(linkhrefInt $res)#if($res.uRI.startsWith($registry.baseURI))${root}$res.uRI.substring($registry.baseURI.length())#else${root}/?entity=$lib.pathEncode($res.getURI())#end#end

## Inject a link to the given resource
###macro(linkfor $res)
##    <a href="#linkhref($res)" title="$res.uRI">$res.name</a>
###end

## Inject a link which is safe against bnodes
#macro(linkfor $res)
  #if($res.isAnon())
    #if($res.getPropertyValue("foaf:homepage"))
      <a href="#linkhref($res.getPropertyValue("foaf:homepage"))">$res.name</a>
    #else
      $res.name
    #end
  #else
    <a href="#linkhref($res)" title="$res.uRI">$res.name</a>
  #end
#end

## Inject a link to the given resource or literal, using the full URI as the link text
#macro(linkraw $res)
  #if($res.isResource())
   <a href="#linkhref($res)" title="$res.uRI">$res.uRI</a>
  #else
   <a href="$res" title="$res.uRI">$res</a>
  #end
#end

## Render a value either as a link (if a resource) or as a (trimmed) lexical form
#macro(render $v)
      #if($v.isResource())
        #if ($v.isAnon())
          []
        #else
          <a href="#linkhrefInt($v)" title="$v.uRI">$v.name</a>
        #end
##        #linkfor($v)
      #elseif ($lib.isDatetime($v))
        #if( $v.datatype == "xsd:date" )
          $lib.printDatetime("d MMM yyyy", $v)
        #else
          $lib.printDatetime($v)
        #end
      #else
        $lib.escapeHtml($v.lexicalForm, 1000)
      #end
#end


## Display a description for a resource if one is available, otherwise show the default (which can be empty)
#macro(description $r $default)
  #if($r.getPropertyValue("dct:description"))
    $r.getLocalizedValue("dct:description")
  #elseif($r.getPropertyValue("skos:definition"))
    $r.getLocalizedValue("skos:definition")
  #elseif($r.getPropertyValue("rdfs:comment"))
    $r.getLocalizedValue("rdfs:comment")
  #else$default#end
#end

## Display a truncated description for a resource if one is available, otherwise show the default (which can be empty)
#macro(tdescription $r $default $limit)
    $lib.reg.stripHtml("#description($r,$default)", $limit)
#end

## Inject a plain link for a resource - no encoding or mapping to the host
#macro(link $uri)
  <a href="$uri">$uri</a>
#end

## Display a property value in the RDF browser
#macro(resentry $v)
  #if($v.isList())
    <ul>
      #foreach($e in $v.asList())
        <li>#resentry($e)</li>
      #end
    </ul>
  #elseif($v.isAnon())
    #restable($v)
  #else
    #render($v)
  #end
#end

## Display a set of property/value pairs in the RDF browser
#macro(restable $res $classes)
  <table class="table $classes">
##    <thead><tr><th>Property</th><th>Value</th></tr></thead>
    <tbody>
      #foreach($pv in $res.listProperties())
        <tr>
          <td class="align-right span2"> <strong title="$pv.getProp().uRI">$pv.getProp().name</strong> </td>
          <td>
            #foreach($v in $pv.getValues())
              #if($v.isList())
                  (#foreach($e in $v.asList())#resentry($e)#if( $foreach.hasNext ), #end#end)
              #elseif($v.isAnon())
                #restable($v)
              #else
                #resentry($v)
              #end
              #if( $foreach.hasNext )|#end
              #if( $foreach.count > 100 ) ... #break #end
            #end
            <br />
          </td>
        </tr>
      #end
    </tbody>
  </table>

#end

## Conditional row in a metadata table
#macro(metadatarow $label $values)
  #if(!$values.isEmpty())<tr><td class="align-right span2"><strong>$label</strong></td><td>#foreach($value in $values)#render($value)#if( $foreach.hasNext )| #end#end</td></tr>#end
#end

## Conditional row in a metadata table, line breaks between multiple values
#macro(mmetadatarow $label $values)
  #if(!$values.isEmpty())<tr><td class="align-right span2"><strong>$label</strong></td><td>#foreach($value in $values)#render($value)#if( $foreach.hasNext ) <br /> #end#end</td></tr>#end
#end

## Conditional row in a metadata table, show only first value
#macro(smetadatarow $label $values)
  #if(!$values.isEmpty())<tr><td class="align-right span2"><strong>$label</strong></td><td>$values[0].name</td></tr>#end
#end

## Conditional row in a metadata table, value is a URI that should be rendered as a full link
#macro(lmetadatarow $label $values)
  #if(!$values.isEmpty())<tr><td class="align-right span2"><strong>$label</strong></td><td>#foreach($value in $values)#linkraw($value)#if( $foreach.hasNext ) <br /> #end#end</td></tr>#end
#end

## Conditional row in a metadata table, render values as no link even if its a URI
#macro(nmetadatarow $label $values)
  #if(!$values.isEmpty())<tr><td class="align-right span2"><strong>$label</strong></td><td>#foreach($value in $values)$value.name#if( $foreach.hasNext ), #end#end</td></tr>#end
#end

## Row in metadata table specifically for submitter
#macro(metadatasubmitter $item)
           #set($submitter=false)
           #set($submitter=$item.listPropertyValues("reg:submitter"))
           #if(!$submitter.isEmpty())
             <tr><td class="align-right"><strong>submitted by</strong></td><td>#foreach($s in $submitter)
             $s.name#if( $foreach.hasNext ), #end#end</td></tr>
           #end
#end

## Insert a set status dialog which using item as the source of current status
## target can be different to allow setting a whole register
#macro(statusSet $dialogID $dialogCaption $item $target)
        <div id="$dialogID" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
                <h3>$dialogCaption</h3>
              </div>
              <div id="${dialogID}-status-body" class="modal-body">
                #set($superseded=false)
                #foreach($status in $lib.reg.nextStates($item.getPropertyValue("reg:status")))
                    #if($status.label == "superseded")
                      #set($superseded=true)
                    #else
                      <button class="set-status btn btn-$status.presentation" data-status="$status" data-target="#linkhref($target)">$status</button>
                    #end
                #end
              #if($superseded)
                  <div class="form-group">
                    <label for="superseded-by">or, superseded by:</label>
                    <div class="input-group">
                      <input type="text" class="form-control" id="superseded-by" placeholder="URI for new item">
                      <span class="input-group-btn">
                        <button class="set-status btn btn-$status.presentation" data-status="superseded" data-target="#linkhref($target)" data-arg="#superseded-by">superseded</button>
                      </span>
                    </div>
                  </div>
              #end
              </div>
              <div class="status-error"></div>
              <div class="modal-footer">
                <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
              </div>
            </div>
          </div>
        </div>
#end


## Debug utility to display the roots of a model
#macro(showmodel $model)
  #foreach($root in $model.listSubjects())
    <h4>Root: $root.uRI</h4>
    #restable($root, "table-condensed table-bordered")
  #end
#end
